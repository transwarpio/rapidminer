# Used for I18N of GUI properties

# Access Import Wizard / Operators
gui.action.import_database_table.label = Import Database Table...
gui.action.import_database_table.icon  = inbox_into.png
gui.action.import_database_table.tip   = Import a database table into an existing repository.
gui.action.import_database_table.mne   = T

gui.action.import_access_table.label = Import Access Database Table...
gui.action.import_access_table.icon  = inbox_into.png
gui.action.import_access_table.tip   = Import a table in an Access file (.mdb) into an existing repository.
gui.action.import_access_table.mne   = D

gui.dialog.import_access_table.title   = Import Access Table
gui.dialog.import_access_table.icon    = inbox_into.png
gui.dialog.import_access_table.message = This wizard allows to import a table contained in an Access database into an existing repository.

###########################################################
# License Constraint Violated Dialog                      #                     
###########################################################

gui.dialog.license.constraint_violation.jdbc.manage_drivers.icon    = sign_forbidden.png
gui.dialog.license.constraint_violation.jdbc.manage_drivers.title   = Management of database drivers not supported
gui.dialog.license.constraint_violation.jdbc.manage_drivers.message = The {1} edition does not support the management of database drivers. Consider upgrading to the Professional edition.

###########################################################
# Database dialog actions                                 #
###########################################################

gui.action.show_database_drivers.label = Show Database Drivers...
gui.action.show_database_drivers.mne   = D
gui.action.show_database_drivers.icon  = data_network.png
gui.action.show_database_drivers.tip   = List all available JDBC database drivers which are currently available to RapidMiner Studio

gui.action.manage_db_connections.label = Manage Database Connections...
gui.action.manage_db_connections.mne   = C
gui.action.manage_db_connections.icon  = data_network_plug_tool.png
gui.action.manage_db_connections.tip   = Create, edit and delete database connections.

####################################################
# ManageDatabaseDriversDialog                      #
####################################################
gui.dialog.manage_database_drivers.title   = Manage Database Drivers
gui.dialog.manage_database_drivers.message = To install new database drivers, select a jar file and a driver class contained in this jar file. Some proprietary JDBC drivers consist of multiple files, e.g. one driver file and one license file. In this case, multiple jar files can be separated by comma. Similarly, multiple driver classes can be separated by comma. After editing these values, RapidMiner Studio must be restarted. 
gui.dialog.manage_database_drivers.icon    = data_network_tool.png

gui.label.manage_database_drivers.name.label = Name
gui.label.manage_database_drivers.name.mne   = N
gui.label.manage_database_drivers.urlprefix.label = URL prefix
gui.label.manage_database_drivers.urlprefix.mne   = U
gui.label.manage_database_drivers.port.label = Port
gui.label.manage_database_drivers.port.mne   = P
gui.label.manage_database_drivers.jarfile.label = Jar file
gui.label.manage_database_drivers.jarfile.mne   = J
gui.label.manage_database_drivers.classname.label = Driver class
gui.label.manage_database_drivers.classname.mne   = D
gui.action.manage_database_drivers.jarfile.label = 
gui.label.manage_database_drivers.dbseparator.label = Schema separator
gui.label.manage_database_drivers.dbseparator.mne   = S

gui.action.manage_database_drivers.jarfile.icon  = folder_open.png
gui.action.manage_database_drivers.label = Manage Database Drivers
gui.action.manage_database_drivers.icon  = data_network_tool.png
gui.action.manage_database_drivers.tip   = Add new or edit JDBC drivers
gui.action.manage_database_drivers.mne   = S

gui.action.manage_database_drivers.add.label = Add
gui.action.manage_database_drivers.add.mne   = A
gui.action.manage_database_drivers.add.tip   = Add new driver
gui.action.manage_database_drivers.add.icon  = plus.png

gui.action.manage_database_drivers.delete.label = Delete
gui.action.manage_database_drivers.delete.mne   = D
gui.action.manage_database_drivers.delete.tip   = Delete selected driver
gui.action.manage_database_drivers.delete.icon  = data_network_delete.png

gui.action.manage_database_drivers.save.label = Save
gui.action.manage_database_drivers.save.mne   = S
gui.action.manage_database_drivers.save.tip   = Save edited drivers.
gui.action.manage_database_drivers.save.icon  = floppy_disk.png

gui.dialog.error.manage_database_drivers.error_saving.title = Failed to save JDBC properties
gui.dialog.error.manage_database_drivers.error_saving.message = Failed to save JDBC properties: {0}


gui.dialog.jdbc_drivers.title = Available Database Drivers
gui.dialog.jdbc_drivers.icon  = data_network.png
gui.dialog.jdbc_drivers.message = The currently available JDBC drivers are listed below. To install additional drivers, please edit your jdbc_properties.xml configuration file accordingly.

####################################################
# Manage DB connections dialog                     #
####################################################
gui.dialog.manage_db_connections.title   = Manage Database Connections
gui.dialog.manage_db_connections.icon    = data_network_plug_tool.png
gui.dialog.manage_db_connections.message = Within this dialog, you can create, edit and delete connections to databases.

gui.dialog.db_connection_advanced.title		= Advanced Connection Properties
gui.dialog.db_connection_advanced.icon		= data_gearwheel.png
gui.dialog.db_connection_advanced.message	= Edit all available properties of the selected connection. WARNING: Only edit settings here if you know what you are doing!

gui.dialog.db_connection_starting.message = Connecting to database...
gui.dialog.db_connection_starting.icon = loading.gif

gui.dialog.db_connection_disabled.message = Fetching database information has been disabled

gui.dialog.db_connection_advanced.table.key.tooltip			= The name of the property.
gui.dialog.db_connection_advanced.table.value.tooltip		= The value of the property.
gui.dialog.db_connection_advanced.table.override.tooltip	= If unchecked, the default value for the property will be used. If checked, the specified custom value will be used.

gui.border.manage_db_connections.connections = Available Connections
gui.border.manage_db_connections.details     = Connection Details

gui.label.manage_db_connections.name.label = Name
gui.label.manage_db_connections.system.label = Database system
gui.label.manage_db_connections.host.label = Host
gui.label.manage_db_connections.port.label = Port
gui.label.manage_db_connections.database.label = Database scheme
gui.label.manage_db_connections.property.label = Property
gui.label.manage_db_connections.user.label = User
gui.label.manage_db_connections.password.label = Password
gui.label.manage_db_connections.url.label = URL

gui.label.manage_db_connections.testing.label = testing...
gui.label.manage_db_connections.no_selection.label = No connection selected

gui.dialog.manage_db_connections.connection_entry.icon = data_network_plug.png
gui.dialog.manage_db_connections.connection_readonly_entry.icon = data_network_plug_lock.png
gui.dialog.manage_db_connections.status.unknown.label = Connection status unknown
gui.dialog.manage_db_connections.status.unknown.icon  = question.png
gui.dialog.manage_db_connections.status.ok.label = Connection ok
gui.dialog.manage_db_connections.status.ok.icon  = ok.png
gui.dialog.manage_db_connections.status.error.label = Connection failed
gui.dialog.manage_db_connections.status.error.icon  = error.png

gui.action.manage_db_connections.new.label = New
gui.action.manage_db_connections.new.icon  = plus.png
gui.action.manage_db_connections.new.tip   = Create a new database connection.

gui.action.manage_db_connections.clone.label = Clone
gui.action.manage_db_connections.clone.icon  = data_copy.png
gui.action.manage_db_connections.clone.tip   = Create a copy of the selected database connection.

gui.action.manage_db_connections.advanced.label = Advanced...
gui.action.manage_db_connections.advanced.icon  = data_gearwheel.png
gui.action.manage_db_connections.advanced.tip   = Configure advanced connection properties.

gui.action.manage_db_connections.delete.label = Delete
gui.action.manage_db_connections.delete.icon  = data_network_plug_delete.png
gui.action.manage_db_connections.delete.tip   = Delete the selected database connection.

gui.action.manage_db_connections.open.label = Open
gui.action.manage_db_connections.open.icon  = folder_open.png
gui.action.manage_db_connections.open.tip   = Open the selected database connection.

gui.action.manage_db_connections.save.label = Save
gui.action.manage_db_connections.save.icon  = floppy_disk.png
gui.action.manage_db_connections.save.tip   = Save database connection.

gui.action.manage_db_connections.test.label = Test
gui.action.manage_db_connections.test.icon  = data_network_unknown.png
gui.action.manage_db_connections.test.tip   = Test database connection.

gui.dialog.error.db_driver_not_found.title		= {0} Driver not found
gui.dialog.error.db_driver_not_found.message	= The {0} driver could not be found. No advanced options available.

gui.dialog.error.manage_db_connections.missing.title   = {0} Missing
gui.dialog.error.manage_db_connections.missing.message = {0} is missing. Please input the field entry properly.

gui.dialog.confirm.manage_db_connections.overwrite.title   = Overwrite Connection
gui.dialog.confirm.manage_db_connections.overwrite.icon    = sign_warning.png
gui.dialog.confirm.manage_db_connections.overwrite.message = A connection with the name {0} already exists. Overwrite connection?

gui.dialog.confirm.manage_db_connections.delete.title   = Delete Connection
gui.dialog.confirm.manage_db_connections.delete.icon    = question.png
gui.dialog.confirm.manage_db_connections.delete.message = Really delete connection {0} from the list?

gui.dialog.error.db_connection_failed.title   = Connection Failed
gui.dialog.error.db_connection_failed.message = Connection to database ''{0}'' at host ''{1}'' (port: {2}) failed. Please check your connection settings and re-validate the connection URL ''{3}''.

gui.dialog.error.db_connection_failed_url.title   = Connection Failed
gui.dialog.error.db_connection_failed_url.message = Connection to database at ''{0}'' failed. Please check your database connection settings and database availability.

gui.dialog.error.db_connection_failed_short.message = Connection to database failed.
gui.dialog.error.db_connection_failed_short.icon = error.png

gui.dialog.error.db_connection_failed_simple.title   = Connection Failed
gui.dialog.error.db_connection_failed_simple.message = Connection to database failed: {0}

gui.dialog.error.failed_to_fetch_database_tables.title=Database error
gui.dialog.error.failed_to_fetch_database_tables.message=Error fetching database tables for connection {0}: {1}

gui.dialog.import_database_table.title   = Import Database Table
gui.dialog.import_database_table.icon    = inbox_into.png
gui.dialog.import_database_table.message = This wizard allows to import a database table into an existing repository.

gui.dialog.step.database_connection.title   = Database Connection
gui.dialog.step.database_connection.message = Please select your database connection.

gui.dialog.step.database_query.title   = Query
gui.dialog.step.database_query.message = Please build a query that creates the data table.

######################################
### ProgressThread
######################################

gui.progress.fetching_database_tables.label=Fetching Database Tables
gui.progress.test_database_connection.label=Testing Database Connection

########################################
### Database Import Wizard
########################################
gui.io.dataimport.source.database.label		= Database
gui.io.dataimport.source.database.description	= Import data from a database.
gui.io.dataimport.source.database.icon		= data_network.png

gui.action.dataimport.db_connections.new.label = New Connection
gui.action.dataimport.db_connections.new.icon  = plus.png
gui.action.dataimport.db_connections.new.tip   = Create a new database connection.

gui.action.dataimport.db_connections.edit.label = Edit Connection
gui.action.dataimport.db_connections.edit.icon  = pencil.png
gui.action.dataimport.db_connections.edit.tip   = Edit the selected database connection.

gui.action.dataimport.db_connections.test.label = Test Connection
gui.action.dataimport.db_connections.test.icon  = data_network_unknown.png
gui.action.dataimport.db_connections.test.tip   = Test the selected database connection.

gui.dialog.io.dataimport.step.database.sql_query.title = Build a query to create a data table.

gui.dialog.error.database_import.metadata_failure.title   = Column configuration failed
gui.dialog.error.database_import.metadata_failure.message = Failed to read the column meta data for the database: {0}